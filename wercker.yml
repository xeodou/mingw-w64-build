box: xeodou/golang-cross:latest

build:
    steps:
      - script:
          name: get build version
          code: |
            VERSION=$(cat version)

      - script:
          name: clone openssl project
          code: |
            cd $HOME
            git clone https://github.com/openssl/openssl.git openssl
            cd openssl
            if [ "$VERSION" != "master" ]; then
                git checkout "OpenSSL_${VERSION//./_}"
            fi

      - script:
          name: build the openssl for mingw
          code: |
            cd $HOME/openssl
            for MINGW in i686-w64-mingw32- x86_64-w64-mingw32-
            do
              case ${MINGW} in
              (*i?86*) TARGET=mingw;;
              (*x86_64*) TARGET=mingw64;;
              (*) false;;
              esac
              if [ "$TARGET" != "mingw" ]; then
                make clean
              fi
              PREFIX=$HOME/openssl-${TARGET}-${VERSION}
              ./Configure ${TARGET} shared --cross-compile-prefix=${MINGW} --prefix=$PREFIX
              make depend && make
              make install
            done

      - script:
          name: deploy to bintray.com
          code: |
            for TARGET in mingw mingw64
            do

              # Compress files
              pkgname=openssl-${TARGET}-${VERSION}
              cd $HOME
              zip $pkgname.zip $pkgname

              # Upload package to bintray
              curl \
              -H "Authorization: Basic ${BINTRAY_TOKEN}" \
              -H "Content-Type:application/octet-stream" \
              -H "X-Bintray-Package: ${BINTRAY_PACKAGE}" \
              -H "X-Bintray-Version: ${VERSION}" \
              -H "X-Bintray-Publish: 1" \
              -H "X-Bintray-Override: 1" \
              -H "X-Bintray-Explode: 1" \
              -X PUT \
              --trace-ascii "${pkgname}.zip" \
              --data-binary @"$HOME/$pkgname.zip" \
              https://api.bintray.com/content/xeodou/openssl/"${pkgname}.zip"

            done
